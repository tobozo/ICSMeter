name: PlatformIOBuild

env:
  SKETCH_NAME: ICSMeter
  GHPAGE_DIR: /home/runner/ICSMeter/gh-pages

on:
  push:
    branches-ignore: [ghpages]
    paths:
    - '**.ino'
    - '**.ini'
    - '**.cpp'
    - '**.hpp'
    - '**.h'
    - '**.c'
    - '**PlatformioBuild.yml'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.board }}@${{ matrix.platform-version }}

    runs-on: ubuntu-latest

    strategy:
      matrix:

        board:
          #- m5stack-core-esp32
          - m5stack-core2

        platform-version:
          - 2.0.3

        include:
          #- board: m5stack-core-esp32
          - board: m5stack-core2

      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache PlatformIO
        uses: actions/cache@v2
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
          mkdir -p ${{ env.GHPAGE_DIR }}

      - name: Get current date
        id: date
        run: |
          echo "::set-output name=datetime::$(date +'%Y-%m-%dT%H:%M:%S%z')"
          echo "::set-output name=version::$(echo $GITHUB_REF | cut -d / -f 3)"
          echo "::set-output name=srcname::.pio/build/${{ matrix.board }}@${{ matrix.platform-version }}/firmware.bin"

      - name: Run PlatformIO
        run: |
          cat settings.h | grep UPDATER_URL && echo yay || echo '#define UPDATER_URL "${{ secrets.UPDATER_URL }}"' >> settings.h
          pio run -e ${{ matrix.board }}@${{ matrix.platform-version }}

      - name: Prepare gh-pages
        env:
          srcname: ${{ steps.date.outputs.srcname }}
          dstname: ${{ env.SKETCH_NAME }}.${{matrix.board}}.bin
          version: ${{ steps.date.outputs.version }}
          datetime: ${{ steps.date.outputs.datetime }}
        run: |
          cp ${{ env.srcname }} ${{ env.GHPAGE_DIR }}/${{ env.dstname }}
          gzip -c ${{ env.srcname }} > ${{ env.GHPAGE_DIR }}/${{ env.dstname }}.gz
          echo "<!doctype html><html><meta charset=utf8><body>Last update: " > ${{ env.GHPAGE_DIR }}/index.html
          echo ${{ env.datetime }} >> ${{ env.GHPAGE_DIR }}/index.html
          echo "<br>" >> ${{ env.GHPAGE_DIR }}/index.html
          echo "<a href=${{ env.dstname }}>${{ env.dstname }}</a></body></html>" >> ${{ env.GHPAGE_DIR }}/index.html
          echo '{"last_update":"${{ env.datetime }}","board":"${{matrix.board}}","firmware":"${{ env.dstname }}","version":"${{ env.version }}"}' > ${{ env.GHPAGE_DIR }}/index.json


      - name: Upload artifact ${{ matrix.matrix-context }}
        uses: actions/upload-artifact@v2
        with:
          name: "Platformio Build"
          path: ${{ env.firmware }}


      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages # The branch the action should deploy to.
          folder: ${{ env.GHPAGE_DIR }}/ # The folder the action should deploy.


