name: PlatformIOBuild


on:
  push:
    branches-ignore: [ghpages]
    paths:
    - '**.ino'
    - '**.ini'
    - '**.cpp'
    - '**.hpp'
    - '**.h'
    - '**.c'
    - '**PlatformioBuild.yml'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: ${{ matrix.board }}@${{ matrix.platform-version }}

    runs-on: ubuntu-latest

    strategy:
      matrix:

        board:
          #- m5stack-core-esp32
          - m5stack-core2

        platform-version:
          - 2.0.3

        include:
          #- board: m5stack-core-esp32
          - board: m5stack-core2

      fail-fast: false

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Cache PlatformIO
        uses: actions/cache@v2
        with:
          path: ~/.platformio
          key: ${{ runner.os }}-${{ hashFiles('**/lockfiles') }}
      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio

      - name: Run PlatformIO

        run: |
          pio run -e ${{ matrix.board }}@${{ matrix.platform-version }}

      - name: Upload artifact ${{ matrix.matrix-context }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.matrix-context }}
          path: .pio/build/${{ matrix.board }}@${{ matrix.platform-version }}/firmware.bin




